name: Build KML Generator

on:
  push:
    paths:
      - "square.py"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 🏗 Install dependencies
        run: |
          if [ $RUNNER_OS = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y python3-tk python3-pil.imagetk
          elif [ $RUNNER_OS = "macOS" ]; then
            brew install python-tk
          fi
          python -m pip install --upgrade pip
          pip install pyinstaller geopy tkintermapview pillow
        shell: bash

      - name: 🔄 Forcer Python en x86_64 pour macOS Intel
        if: matrix.os == 'macos-latest'
        run: |
          arch -x86_64 /usr/local/bin/python3 -m venv venv_x86
          source venv_x86/bin/activate
          pip install --upgrade pip
          pip install pyinstaller geopy tkintermapview pillow
        shell: bash

      - name: 📝 Générer le fichier d'information
        run: |
          echo "Build Date: $(date)" > build_info.txt
          echo "OS: $RUNNER_OS" >> build_info.txt
          echo "Python Version: $(python --version)" >> build_info.txt
          echo "Commit: $(git rev-parse --short HEAD)" >> build_info.txt
        shell: bash

      - name: 🔨 Build executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --windowed \
            --icon=logo.png \
            --add-data "logo.png:." \
            --name "KML_Generator_Linux" \
            square.py
        shell: bash

      - name: 🔨 Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --windowed ^
            --icon=logo.ico ^
            --add-data "logo.ico;." ^
            --name "KML_Generator_Windows" ^
            square.py
        shell: cmd

      - name: 🔨 Build executable (macOS ARM64)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --target-arch=arm64 \
            --icon=logo.icns \
            --add-data "logo.icns:." \
            --name "KML_Generator_ARM64" \
            square.py
        shell: bash

      - name: 🔨 Build executable (macOS Intel x86_64)
        if: matrix.os == 'macos-latest'
        run: |
          source venv_x86/bin/activate
          arch -x86_64 venv_x86/bin/python -m PyInstaller --onefile --windowed --target-arch=x86_64 \
            --icon=logo.icns \
            --add-data "logo.icns:." \
            --name "KML_Generator_x86_64" \
            square.py
        shell: bash

      - name: 🔨 Build executable (macOS Universel)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --target-arch=universal2 \
            --icon=logo.icns \
            --add-data "logo.icns:." \
            --name "KML_Generator_Universal" \
            square.py
        shell: bash

      - name: 📦 Créer un fichier DMG (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          hdiutil create -volname "KML Generator" -srcfolder dist/KML_Generator_Universal.app -ov -format UDZO dist/KML_Generator.dmg
        shell: bash

      - name: 📤 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: KML_Generator_${{ matrix.os }}
          path: |
            dist/KML_Generator_*
            build_info.txt
